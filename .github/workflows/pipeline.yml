name: pipeline

on:
  push:
    branches:
      - main
      - pipeline-config
  
jobs:
  unit-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
      
    - run: mvn test
      with:
        java-version: 17
    - name: Generate JaCoCo Badge
      id: jacoco
      uses: cicirello/jacoco-badge-generator@v2.11.0
    - name: Log coverage percentage
      run: |
        echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
        echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"    
    - name: Upload JaCoCo coverage report
      uses: actions/upload-artifact@v2
      with:
        name: jacoco-report
        path: target/site/jacoco/
        
  code-analisys:
    runs-on: ubuntu-latest
    needs: unit-test
    
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up JDK 17
      uses: actions/setup-java@v1
      with:
        java-version: 17
        
    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
        
    - name: Cache Maven packages
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=devopsfiap_devopsscj
    - name: Check Quality Gate
      env: 
       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
         QUALITY_GATE_STATUS=$(curl -s "https://sonarcloud.io/api/qualitygates/project_status?projectKey=Devops-Fiap-ON" -H "Authorization: Basic $SONAR_TOKEN" | jq -r '.projectStatus.status')
         if [ "$QUALITY_GATE_STATUS" = "OK" ]; then
           echo "QG OK"
         fi
  build:
    runs-on: ubuntu-latest
    needs: code-analisys
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1
        with:
          context: .

      - name: Setup AWS EKS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Get authentication token
        run: aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ secrets.ECR_HOST }}

      - name: Build Docker Image
        run: docker build -t lanchonete .
         
  publish:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: write
    steps:
      - name: Get Helm Chart version
        run: |
          version=$(helm show chart ./manifest/lanchonete/ | grep "^version:" | awk '{print $2}')
          echo "Helm Chart version: $version"
          echo "VERSION=$version" >> $GITHUB_ENV

      - name: Create tag repository
        run:
          docker tag lanchonete:latest "${{ secrets.ECR_HOST }}/lanchonete:${{ env.VERSION }}"

      - name: Push Docker Image
        run: docker push ${{ secrets.ECR_HOST }}/lanchonete:${{ env.VERSION }}    
  
          
  deploy-Prod:
    runs-on: ubuntu-latest
    
    if: github.ref == 'refs/heads/main'
    environment:
      name: prod
    needs: publish
    steps:
      - name: Configure kubectl
        run: aws eks update-kubeconfig --name lanchonete-cluster

      - name: Deploy to EKS using Helm
        run: |
          helm upgrade --install \
            lanchonete-cluster \
            manifest/lanchonete \
            --namespace default \
            --set image.repository=${{ secrets.ECR_HOST }}/lanchonete \
            --set image.tag=${{ env.VERSION }}
